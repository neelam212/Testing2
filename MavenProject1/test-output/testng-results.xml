<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-05-08T11:25:42 IST" name="Default suite" finished-at="2023-05-08T11:25:43 IST" duration-ms="960">
    <groups>
    </groups>
    <test started-at="2023-05-08T11:25:42 IST" name="Default test" finished-at="2023-05-08T11:25:43 IST" duration-ms="960">
      <class name="ModularFrameWork.BasicExtendReportsClass">
        <test-method is-config="true" signature="startreports()[pri:0, instance:ModularFrameWork.BasicExtendReportsClass@3cebbb30]" started-at="2023-05-08T11:25:42 IST" name="startreports" finished-at="2023-05-08T11:25:42 IST" duration-ms="362" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startreports -->
        <test-method signature="launchBrowserandnavigatePage()[pri:0, instance:ModularFrameWork.BasicExtendReportsClass@3cebbb30]" started-at="2023-05-08T11:25:42 IST" name="launchBrowserandnavigatePage" finished-at="2023-05-08T11:25:42 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowserandnavigatePage -->
        <test-method is-config="true" signature="gettestresults(org.testng.ITestResult)[pri:0, instance:ModularFrameWork.BasicExtendReportsClass@3cebbb30]" started-at="2023-05-08T11:25:42 IST" name="gettestresults" finished-at="2023-05-08T11:25:42 IST" duration-ms="19" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=launchBrowserandnavigatePage status=SUCCESS method=BasicExtendReportsClass.launchBrowserandnavigatePage()[pri:0, instance:ModularFrameWork.BasicExtendReportsClass@3cebbb30] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gettestresults -->
        <test-method signature="verfiyLogo()[pri:0, instance:ModularFrameWork.BasicExtendReportsClass@3cebbb30]" started-at="2023-05-08T11:25:42 IST" name="verfiyLogo" finished-at="2023-05-08T11:25:42 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verfiyLogo -->
        <test-method is-config="true" signature="gettestresults(org.testng.ITestResult)[pri:0, instance:ModularFrameWork.BasicExtendReportsClass@3cebbb30]" started-at="2023-05-08T11:25:42 IST" name="gettestresults" finished-at="2023-05-08T11:25:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verfiyLogo status=SUCCESS method=BasicExtendReportsClass.verfiyLogo()[pri:0, instance:ModularFrameWork.BasicExtendReportsClass@3cebbb30] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gettestresults -->
        <test-method signature="verifyEmail()[pri:0, instance:ModularFrameWork.BasicExtendReportsClass@3cebbb30]" started-at="2023-05-08T11:25:42 IST" name="verifyEmail" finished-at="2023-05-08T11:25:42 IST" duration-ms="3" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[skipping this test cases with exception]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: skipping this test cases with exception
at ModularFrameWork.BasicExtendReportsClass.verifyEmail(BasicExtendReportsClass.java:78)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmail -->
        <test-method is-config="true" signature="gettestresults(org.testng.ITestResult)[pri:0, instance:ModularFrameWork.BasicExtendReportsClass@3cebbb30]" started-at="2023-05-08T11:25:42 IST" name="gettestresults" finished-at="2023-05-08T11:25:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEmail status=SKIP method=BasicExtendReportsClass.verifyEmail()[pri:0, instance:ModularFrameWork.BasicExtendReportsClass@3cebbb30] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gettestresults -->
        <test-method signature="verifyUsername()[pri:0, instance:ModularFrameWork.BasicExtendReportsClass@3cebbb30]" started-at="2023-05-08T11:25:42 IST" name="verifyUsername" finished-at="2023-05-08T11:25:42 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUsername -->
        <test-method is-config="true" signature="gettestresults(org.testng.ITestResult)[pri:0, instance:ModularFrameWork.BasicExtendReportsClass@3cebbb30]" started-at="2023-05-08T11:25:42 IST" name="gettestresults" finished-at="2023-05-08T11:25:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUsername status=SUCCESS method=BasicExtendReportsClass.verifyUsername()[pri:0, instance:ModularFrameWork.BasicExtendReportsClass@3cebbb30] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gettestresults -->
        <test-method signature="verifytitle()[pri:0, instance:ModularFrameWork.BasicExtendReportsClass@3cebbb30]" started-at="2023-05-08T11:25:42 IST" name="verifytitle" finished-at="2023-05-08T11:25:42 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifytitle -->
        <test-method is-config="true" signature="gettestresults(org.testng.ITestResult)[pri:0, instance:ModularFrameWork.BasicExtendReportsClass@3cebbb30]" started-at="2023-05-08T11:25:42 IST" name="gettestresults" finished-at="2023-05-08T11:25:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifytitle status=SUCCESS method=BasicExtendReportsClass.verifytitle()[pri:0, instance:ModularFrameWork.BasicExtendReportsClass@3cebbb30] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gettestresults -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:ModularFrameWork.BasicExtendReportsClass@3cebbb30]" started-at="2023-05-08T11:25:42 IST" name="teardown" finished-at="2023-05-08T11:25:43 IST" duration-ms="504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- ModularFrameWork.BasicExtendReportsClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
